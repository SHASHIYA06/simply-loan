import React, { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Eye, EyeOff, Lock, Mail, AlertCircle, Building2 } from "lucide-react";
import { Admin } from "@/entities/Admin";
import { SendEmail } from "@/integrations/Core";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";

export default function AdminLogin() {
  const navigate = useNavigate();
  const [form, setForm] = useState({ email: "Chandu.m525@gmail.com", password: "" });
  const [showPassword, setShowPassword] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");

  const handleLogin = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setError("");

    // This is a simplified auth check for demonstration.
    // In a real app, you would use a secure authentication flow.
    if (form.email === "CHANDRA SHEKHAR MISHRA" && form.password === "Chandu@4321") {
      localStorage.setItem("andromeda_admin", JSON.stringify({
        email: form.email,
        name: "CHANDRA SHEKHAR MISHRA",
        loginTime: new Date().toISOString()
      }));
      navigate(createPageUrl("AdminDashboard"));
    } else {
      setError("Invalid credentials. Please try again.");
    }
    setIsLoading(false);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 p-4">
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
      >
        <Card className="w-full max-w-md mx-auto bg-white/10 backdrop-blur-lg border-white/20 text-white">
            <CardHeader className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg transform rotate-[-15deg]">
                    <Building2 className="w-8 h-8 text-white" />
                </div>
                <CardTitle className="text-3xl font-bold">Admin Panel</CardTitle>
                <p className="text-slate-300">Andromeda Loan Distribution</p>
            </CardHeader>
            <CardContent>
                <form onSubmit={handleLogin} className="space-y-6">
                    {error && (
                        <Alert variant="destructive">
                            <AlertCircle className="h-4 w-4" />
                            <AlertDescription>{error}</AlertDescription>
                        </Alert>
                    )}
                    <div className="space-y-2">
                        <Label htmlFor="email">Username</Label>
                        <div className="relative">
                            <Mail className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-slate-400"/>
                            <Input 
                                id="email" 
                                value={form.email} 
                                onChange={(e) => setForm({...form, email: e.target.value})} 
                                className="pl-10 bg-white/10 border-white/20 focus:bg-white/20"
                                required 
                            />
                        </div>
                    </div>
                    <div className="space-y-2">
                        <Label htmlFor="password">Password</Label>
                        <div className="relative">
                            <Lock className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-slate-400"/>
                            <Input 
                                id="password" 
                                type={showPassword ? 'text' : 'password'}
                                value={form.password} 
                                onChange={(e) => setForm({...form, password: e.target.value})} 
                                className="pl-10 bg-white/10 border-white/20 focus:bg-white/20"
                                required
                            />
                            <button type="button" onClick={() => setShowPassword(!showPassword)} className="absolute right-3 top-1/2 -translate-y-1/2">
                                {showPassword ? <EyeOff className="w-5 h-5 text-slate-400"/> : <Eye className="w-5 h-5 text-slate-400"/>}
                            </button>
                        </div>
                    </div>
                    <Button type="submit" className="w-full text-lg py-6 bg-gradient-to-r from-blue-600 to-indigo-700 hover:scale-105 transition-transform" disabled={isLoading}>
                        {isLoading ? "Signing In..." : "Sign In"}
                    </Button>
                </form>
            </CardContent>
        </Card>
      </motion.div>
    </div>
  );
}
